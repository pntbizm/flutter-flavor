#!/usr/bin/env bash

#set -x
set -e

PUBSPEC=pubspec.yaml
FLUTTER_FLAVOR=flutter-flavor
ANDROID_BUILD_GRADLE=android/app/build.gradle
ANDROID_APP_MANIFEST=android/app/src/main/AndroidManifest.xml
ANDROID_SRC_PATH=android/app/src
IOS_FLUTTER_PATH=ios/Flutter
IOS_SCHEME_PATH=ios/Runner.xcodeproj/xcshareddata/xcschemes
IOS_DEFAULT_SCHEME=Runner.xcscheme
IOS_PROJECT=ios/Runner.xcodeproj/project.pbxproj
IOS_ASSESTS_PATH=ios/Runner/Assets.xcassets
IOS_INFO_PLIST_FILE=ios/Runner/Info.plist

function _uuid() {
    uuidgen | sed s/-//g | cut -c -24
}

function _flavorEnabledAndroid() {
    grep -q "<flutter-flavor>" $ANDROID_BUILD_GRADLE
}

function _flavorEnabledIOS() {
    grep -q "<flutter-flavor>" $IOS_PROJECT
}

function _flavorListAndroid() {
    if _flavorEnabledAndroid; then
        echo -n "android: "
        sed -n 's/\ *\/\/\/ <flavor \(.*\)>/  \1/p' $ANDROID_BUILD_GRADLE | sort | xargs 
    fi
}

function _flavorListIOS() {
    if _flavorEnabledIOS; then
        echo -n "ios: "
        find $IOS_SCHEME_PATH -maxdepth 1 -type f -not -name 'Runner.xcscheme' -and -name '*.xcscheme' \
          -exec sh -c "basename {} | sed 's/\.[^.]*$//'" \; | sort | xargs
    fi
}

function _flavorEnableAndroid() {
    echo "Enable flavors (Android)"

    echo "  Patch $ANDROID_BUILD_GRADLE"
    patch -s -p1 << EOF
--- a/android/app/build.gradle
+++ b/android/app/build.gradle
@@ -48,6 +48,16 @@ android {
             signingConfig signingConfigs.debug
         }
     }
+
+    /// <flutter-flavor>
+    /// Do not remove triple slashes comment generated by flutter-flavor
+    flavorDimensions "flavor-type"
+
+    productFlavors {
+        /// <flavor-products>
+    }
+    /// </flutter-flavor>
+    /// End of generated section
 }

 flutter {
EOF

    echo "  Patch $ANDROID_APP_MANIFEST"
    sed -i '' "s/android:label=\".*\"/android:label=\"@string\/app_name\"/" $ANDROID_APP_MANIFEST
}

function _flavorEnableIOS() {
    local flavor=$1
    echo "Enable flavors (iOS)"

	echo "  Patch $IOS_INFO_PLIST_FILE"
	local package=$(grep "name:" $PUBSPEC | cut -d':' -f2 | xargs)
	sed -i "" "s/<string>$package<\/string>/<string>\$(bundle_name)<\/string>/" $IOS_INFO_PLIST_FILE

    echo "  Patch $IOS_PROJECT"
    patch -s -p1 << EOF
--- a/ios/Runner.xcodeproj/project.pbxproj
+++ b/ios/Runner.xcodeproj/project.pbxproj
@@ -14,7 +14,6 @@
 		3B80C3951E831B6300D905FE /* App.framework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = 3B80C3931E831B6300D905FE /* App.framework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
 		9705A1C61CF904A100538489 /* Flutter.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9740EEBA1CF902C7004384FC /* Flutter.framework */; };
 		9705A1C71CF904A300538489 /* Flutter.framework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = 9740EEBA1CF902C7004384FC /* Flutter.framework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
-		9740EEB41CF90195004384FC /* Debug.xcconfig in Resources */ = {isa = PBXBuildFile; fileRef = 9740EEB21CF90195004384FC /* Debug.xcconfig */; };
 		978B8F6F1D3862AE00F588F7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 7AFFD8EE1D35381100E5BB4D /* AppDelegate.m */; };
 		97C146F31CF9000F007C117D /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 97C146F21CF9000F007C117D /* main.m */; };
 		97C146FC1CF9000F007C117D /* Main.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FA1CF9000F007C117D /* Main.storyboard */; };
@@ -55,6 +54,7 @@
 		97C146FD1CF9000F007C117D /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
 		97C147001CF9000F007C117D /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/LaunchScreen.storyboard; sourceTree = "<group>"; };
 		97C147021CF9000F007C117D /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
+		/* <flavor-files> */
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -80,6 +80,7 @@
 				9740EEB21CF90195004384FC /* Debug.xcconfig */,
 				7AFA3C8E1D35360C0083082E /* Release.xcconfig */,
 				9740EEB31CF90195004384FC /* Generated.xcconfig */,
+				/* <flavor-groups> */
 			);
 			name = Flutter;
 			sourceTree = "<group>";
@@ -481,6 +482,7 @@
 			};
 			name = Release;
 		};
+		/* <flavor-configs> */
 /* End XCBuildConfiguration section */
 
 /* Begin XCConfigurationList section */
@@ -490,6 +492,7 @@
 				97C147031CF9000F007C117D /* Debug */,
 				97C147041CF9000F007C117D /* Release */,
 				249021D3217E4FDB00AE95B9 /* Profile */,
+				/* <flavor-project-configs> */
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
@@ -500,6 +503,7 @@
 				97C147061CF9000F007C117D /* Debug */,
 				97C147071CF9000F007C117D /* Release */,
 				249021D4217E4FDB00AE95B9 /* Profile */,
+				/* <flavor-target-configs> */
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
@@ -508,3 +512,4 @@
 	};
 	rootObject = 97C146E61CF9000F007C117D /* Project object */;
 }
+/* <flutter-flavor> */
EOF
}

function _flavorAddAndroid() {
    local flavor=$1
    echo "Add flavor $flavor (Android)"

    echo "  Patch $ANDROID_BUILD_GRADLE"
    local part=/tmp/flutter-flavor-android.part
    cat<<EOF > $part
        /// <flavor $flavor>
        $flavor {
            dimension "flavor-type"
            applicationIdSuffix ".$flavor"
            resValue "string", "app_name", "$flavor"
        }
        /// </flavor $flavor>
EOF
    awk -i inplace '/.*\/\/\/ <flavor-products>/ {
            while (getline line < "/tmp/flutter-flavor-android.part") {
                print line
            }
        }
        //' $ANDROID_BUILD_GRADLE
    rm -f $part

	echo "  Create res directory"
	mkdir -p $ANDROID_SRC_PATH/$flavor
	cp -r $ANDROID_SRC_PATH/main/res $ANDROID_SRC_PATH/$flavor
}

_retUuid=
function _addFlutterFileIOS() {
    local filename=$1
    local uuid=$(_uuid)
    local part=/tmp/flutter-flavor-ios.part

    echo "    Add $filename"
    cat <<EOF > $part
		$uuid /* $filename */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; name = $filename; path = Flutter/$filename; sourceTree = "<group>"; };
EOF
    awk -i inplace '/<flavor-files>/ {
            while (getline line < "/tmp/flutter-flavor-ios.part") {
                print line
            }
        }
        //' $IOS_PROJECT

    cat <<EOF > $part
				$uuid /* $filename */,
EOF
    awk -i inplace '/<flavor-groups>/ {
            while (getline line < "/tmp/flutter-flavor-ios.part") {
                print line
            }
        }
        //' $IOS_PROJECT

    rm -f $part
    _retUuid=$uuid
}

function _addBuildConfigurationIOS() {
    local flavor=$1
    local part=/tmp/flutter-flavor-ios.part
    local uuidReleaseProject=$(_uuid)
    local uuidReleaseTarget=$(_uuid)
    local uuidDebugProject=$(_uuid)
    local uuidDebugTarget=$(_uuid)

	echo "    Read PRODUCT_BUNDLE_IDENTIFIER"
	local bundle_id=$(grep -m1 PRODUCT_BUNDLE_IDENTIFIER $IOS_PROJECT | cut -d'=' -f2 | cut -d';' -f1 | xargs)

    echo "    Add $flavor files"
    _addFlutterFileIOS "Release-$flavor.xcconfig"
    local uuidReleaseFile=$_retUuid
    _addFlutterFileIOS "Debug-$flavor.xcconfig"
    local uuidDebugFile=$_retUuid
    _addFlutterFileIOS "$flavor.xcconfig"
    local uuidFlavorFile=$_retUuid

    echo "    Add $flavor configurations"
    cat <<EOF > $part
				$uuidReleaseProject /* Release-$flavor */,
				$uuidDebugProject /* Debug-$flavor */,
EOF
    awk -i inplace '/<flavor-project-configs>/ {
            while (getline line < "/tmp/flutter-flavor-ios.part") {
                print line
            }
        }
        //' $IOS_PROJECT

    cat <<EOF > $part
				$uuidReleaseTarget /* Release-$flavor */,
				$uuidDebugTarget /* Debug-$flavor */,
EOF
    awk -i inplace '/<flavor-target-configs>/ {
            while (getline line < "/tmp/flutter-flavor-ios.part") {
                print line
            }
        }
        //' $IOS_PROJECT

    cat <<EOF > $part
		/* <flavor $flavor> */
		$uuidReleaseProject /* Release-$flavor */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = $uuidReleaseFile /* Release-$flavor.xcconfig */;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = iphoneos;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
			};
			name = Release-$flavor;
		};
   	    $uuidReleaseTarget /* Release-$flavor */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = $uuidReleaseFile /* Release-$flavor.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon-$flavor;
				CURRENT_PROJECT_VERSION = "\$(FLUTTER_BUILD_NUMBER)";
				ENABLE_BITCODE = NO;
				FRAMEWORK_SEARCH_PATHS = (
					"\$(inherited)",
					"\$(PROJECT_DIR)/Flutter",
				);
				INFOPLIST_FILE = Runner/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "\$(inherited) @executable_path/Frameworks";
				LIBRARY_SEARCH_PATHS = (
					"\$(inherited)",
					"\$(PROJECT_DIR)/Flutter",
				);
				PRODUCT_BUNDLE_IDENTIFIER = $bundle_id.$flavor;
				PRODUCT_NAME = "\$(TARGET_NAME)";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release-$flavor;
		};

		$uuidDebugProject /* Debug-$flavor */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = $uuidDebugFile /* Debug-$flavor.xcconfig */;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"\$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug-$flavor;
		};
		$uuidDebugTarget /* Debug-$flavor */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = $uuidDebugFile /* Debug-$flavor.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon-$flavor;
				CURRENT_PROJECT_VERSION = "\$(FLUTTER_BUILD_NUMBER)";
				ENABLE_BITCODE = NO;
				FRAMEWORK_SEARCH_PATHS = (
					"\$(inherited)",
					"\$(PROJECT_DIR)/Flutter",
				);
				INFOPLIST_FILE = Runner/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "\$(inherited) @executable_path/Frameworks";
				LIBRARY_SEARCH_PATHS = (
					"\$(inherited)",
					"\$(PROJECT_DIR)/Flutter",
				);
				PRODUCT_BUNDLE_IDENTIFIER = $bundle_id.$flavor;
				PRODUCT_NAME = "\$(TARGET_NAME)";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug-$flavor;
		};
		/* </flavor $flavor> */
EOF
    awk -i inplace '/<flavor-configs>/ {
            while (getline line < "/tmp/flutter-flavor-ios.part") {
                print line
            }
        }
        //' $IOS_PROJECT
    
    rm -f $part
}

function _flavorAddIOS() {
    local flavor=$1
    echo "Add flavor $flavor (iOS)"

    echo "  Add $flavor scheme"
    cp -f $IOS_SCHEME_PATH/$IOS_DEFAULT_SCHEME $IOS_SCHEME_PATH/$flavor.xcscheme
    
    echo "  Create Release-$flavor.xcconfig configuration file"
    cat <<EOF > $IOS_FLUTTER_PATH/Release-$flavor.xcconfig
#include "Release.xcconfig"
#include "$flavor.xcconfig"
EOF
    echo "  Create Debug-$flavor.xcconfig configuration file"
    cat <<EOF > $IOS_FLUTTER_PATH/Debug-$flavor.xcconfig
#include "Debug.xcconfig"
#include "$flavor.xcconfig"
EOF

    echo "  Create $flavor.xcconfig configuration file"
    cat <<EOF > $IOS_FLUTTER_PATH/$flavor.xcconfig
bundle_name = $flavor
EOF

	echo "  Update $IOS_PROJECT project"
    _addBuildConfigurationIOS $flavor

	echo "  Create AppIcon-$flavor catalog"
	mkdir -p $IOS_ASSESTS_PATH/AppIcon-$flavor.appiconset
	cp $IOS_ASSESTS_PATH/AppIcon.appiconset/* $IOS_ASSESTS_PATH/AppIcon-$flavor.appiconset 
}

function _flavorAdd() {
    local flavor=$1
    _flavorAddAndroid $flavor
    _flavorAddIOS $flavor
}

function flavorEnable() {
    if ! _flavorEnabledAndroid; then
        _flavorEnableAndroid
    fi
    if ! _flavorEnabledIOS; then
        _flavorEnableIOS
    fi
    flavorAdd $@
}

function flavorList() {
    _flavorListAndroid
    _flavorListIOS
}

function flavorAdd() {
    local flavor
    for flavor in $@; do
        _flavorAdd $flavor
    done
}

function _flavorRemoveAndroid() {
    local flavor=$1
    echo "Remove flavor $flavor (Android)"
    sed -i '' "/<flavor $flavor>/,/<\/flavor $flavor>/d" $ANDROID_BUILD_GRADLE
}

function _flavorRemoveIOS() {
    local flavor=$1
    echo "Remove flavor $flavor (iOS)"

    echo "  Remove $flavor scheme"
    rm -f $IOS_SCHEME_PATH/$flavor.xcscheme

    echo "  Update $IOS_PROJECT"
    echo "    Remove $flavor files/groups"
    sed -i '' "s/.*$flavor\.xcconfig.*//g" $IOS_PROJECT

    echo "    Remove $flavor configurations"
    sed -i '' "s/.*Release-$flavor.*//g; s/.*Debug-$flavor.*//g; /<flavor $flavor>/,/<\/flavor $flavor>/d" $IOS_PROJECT
}

function _flavorRemove() {
    local flavor=$1
    echo "Remove flavor $flavor"
	_flavorRemoveAndroid $flavor
    _flavorRemoveIOS $flavor
}

function flavorRemove() {
	local flavor
    for flavor in $@; do
        _flavorRemove $flavor
    done
}

function _flavorCheckAndroid() {
	_flavorEnabledAndroid || exit -100
	
	local tag
	for tag in flutter-flavor flavor-products; do
		grep -q $tag $ANDROID_BUILD_GRADLE || exit -101
	done
}

function _flavorCheckIOS() {
	_flavorEnabledIOS || exit -200

	local tag
	for tag in flutter-flavor flavor-files flavor-groups flavor-project-configs flavor-target-configs flavor-configs; do
		grep -q $tag $IOS_PROJECT || exit -101
	done
}

function flavorCheck() {
	_flavorCheckAndroid
	_flavorCheckIOS
}

function help() {
    echo "Manage your Flutter app flavors."
    echo
    echo "Usage: flutter-flavor <command> [arguments]"
    echo
    echo "Available commands:"
	echo "  check              Check if flavors have been enabled"
    echo "  enable [flavors]   Enable flavors and optionaly add flavor(s)"
    echo "  list               List enabled flavors"
    echo "  add <flavors>      Add flavors"
    echo "  remove <flavors>   Remove flavors"
	echo "  help               Display help information"
}

CMD=$1
shift || true
case $CMD in
	check)
		flavorCheck
		;;
    enable)
        flavorEnable $@
        ;;
    list)
        flavorList
        ;;
    add)
        flavorAdd $@
        ;;
    remove)
        flavorRemove $@
        ;;
    *)
        help
        ;;
esac
